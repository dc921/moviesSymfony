<?php

namespace WP\UserBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository {

    public function findByRoles($role) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
                ->from('WPUserBundle:User', 'u')
                ->where('u.roles LIKE :roles')
                ->setParameter('roles', '%"' . $role . '"%');

        return $qb->getQuery()->getResult();
    }

    public function findAdmin() {
        $qb = $this->createQueryBuilder('u')
                ->where('u.roles LIKE :sAdmin')
                ->orWhere('u.roles LIKE :admin')
                ->orderBy('u.lastLogin','desc')
                ->setParameter('sAdmin', '%"ROLE_SUPER_ADMIN"%')
                ->setParameter('admin', '%"ROLE_ADMIN"%');

        return $qb->getQuery()->getResult();
    }

    public function findUserRoles($page, $nbPerPage) {
        $query = $this->createQueryBuilder('u')
                ->where('u.roles NOT LIKE :roleAdmin')
                ->andWhere('u.roles NOT LIKE :roleSuperAdmin')
                ->setParameter('roleAdmin', '%"ROLE_ADMIN"%')
                ->setParameter('roleSuperAdmin', '%"ROLE_SUPER_ADMIN"%')
                ->getQuery();

        $query->setFirstResult(($page - 1) * $nbPerPage)->setMaxResults($nbPerPage);

        return new Paginator($query, true);
    }

}
